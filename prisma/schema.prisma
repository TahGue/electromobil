generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  phone         String?
  role          UserRole  @default(CUSTOMER)
  password      String
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  bookings      Booking[]

  @@map("users")
}

model Service {
  id              String    @id @default(cuid())
  name            String
  description     String
  price           Decimal   @db.Decimal(10, 2)
  duration        Int
  category        String
  isActive        Boolean   @default(true)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  lastSyncedAt    DateTime?
  zettleEtag      String?
  zettleProductId String?   @unique
  bookings        Booking[]

  @@map("services")
}

model Booking {
  id             String        @id @default(cuid())
  bookingNumber  String        @unique
  customerName   String
  customerEmail  String
  customerPhone  String
  deviceModel    String?
  deviceIssue    String?
  preferredDate  DateTime
  preferredTime  String?
  status         BookingStatus @default(PENDING)
  estimatedPrice Decimal?      @db.Decimal(10, 2)
  finalPrice     Decimal?      @db.Decimal(10, 2)
  notes          String?
  emailSent      Boolean       @default(false)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  userId         String?
  serviceId      String
  service        Service       @relation(fields: [serviceId], references: [id])
  user           User?         @relation(fields: [userId], references: [id])

  @@map("bookings")
}

model ContactForm {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?
  subject   String
  message   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())

  @@map("contact_forms")
}

model BusinessInfo {
  id          String @id @default(cuid())
  name        String
  address     String
  phone       String
  email       String
  hours       Json
  socialLinks Json

  @@map("business_info")
}

/// Images used across the site and admin
model Image {
  id         String       @id @default(cuid())
  url        String
  alt        String
  section    ImageSection
  creditName String?
  creditUrl  String?
  position   Int          @default(0)
  isActive   Boolean      @default(true)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  @@map("images")
}

/// Stores OAuth tokens for Zettle (singleton row)
model ZettleAuth {
  id           String   @id @default("singleton")
  accessToken  String
  refreshToken String
  expiresAt    DateTime
  scope        String?
  tokenType    String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("zettle_auth")
}

/// Promotional countdown banner configuration (singleton row)
model PromoCountdown {
  id          String   @id @default("singleton")
  isActive    Boolean  @default(true)
  title       String   @default("Tidsbegränsat erbjudande")
  description String   @default("rabatt på skärmbyten")
  percentage  Int      @default(15)
  couponCode  String   @default("SAVE15")
  endDateTime DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("promo_countdown")
}

enum UserRole {
  CUSTOMER
  ADMIN
}

enum BookingStatus {
  PENDING
  CONFIRMED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum ImageSection {
  HERO
  SERVICES
  TESTIMONIALS
  GALLERY
  BOOKING
  CONTACT
  TRUST
}
